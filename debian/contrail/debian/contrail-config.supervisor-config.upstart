description     "Supervisord for VNC Config"

start on runlevel [2345]
stop on runlevel [016]
limit core unlimited unlimited

# Restart the process if it dies with a signal
# or exit code not given by the 'normal exit' stanza.
respawn

# Give up if restart occurs 10 times in 90 seconds.
respawn limit 10 90

pre-start script
    ulimit -s unlimited
    ulimit -c unlimited
    ulimit -d unlimited
    ulimit -v unlimited
    ulimit -n 4096
    # cleanup subprocesses that are not reaped by supervisord, so that lifecycle management
    # of the programs is with supervisord (config)
    if [[ ! -z `ps -ef | grep contrail-discovery | grep -v grep | awk '{print $2}'` ]]; then
       pkill -9 -f contrail-discovery
    fi
    if [[ ! -z `ps -ef | grep irond.jar | grep -v grep | awk '{print $2}'` ]]; then
       pkill -9 -f irond.jar
    fi
    if [[ ! -z `ps -ef | grep contrail-api | grep -v grep | awk '{print $2}'` ]]; then
       pkill -9 -f contrail-api
    fi
    if [[ ! -z `ps -ef | grep contrail-schema | grep -v grep | awk '{print $2}'` ]]; then
       pkill -9 -f contrail-schema
    fi
    if [[ ! -z `ps -ef | grep contrail-svc-monitor | grep -v grep | awk '{print $2}'` ]]; then
       pkill -9 -f contrail-svc-monitor
    fi
    if [[ ! -z `ps -ef | grep contrail-device-manager | grep -v grep | awk '{print $2}'` ]]; then
       pkill -9 -f contrail-device-manager
    fi
end script

#exec /usr/bin/supervisord --nodaemon -c /etc/contrail/supervisord_config.conf
script
    supervisord --nodaemon -c /etc/contrail/supervisord_config.conf || true
    echo "supervisor-config start failed...."
    (lsof | grep -i supervisord_config.sock) || true
    pid=`lsof | grep -i supervisord_config.sock | cut -d' ' -f3` || true
    if [ "x$pid" != "x" ]; then
        ps uw -p $pid
    fi
end script

pre-stop script
    if [ -e /tmp/supervisord_config.sock ]; then
        supervisorctl -s unix:///tmp/supervisord_config.sock stop all
        supervisorctl -s unix:///tmp/supervisord_config.sock shutdown
    else
        supervisorctl -s unix:///var/run/supervisord_config.sock stop all
        supervisorctl -s unix:///var/run/supervisord_config.sock shutdown
    fi
end script
