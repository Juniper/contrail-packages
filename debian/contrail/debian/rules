#!/usr/bin/make -f
# -*- makefile -*-

export DH_EXEC_SCRIPTDIR=debian/dh-exec

export INSTALL_ROOT="$(shell pwd)/debian/tmp"
SB_TOP := $(shell pwd | sed -re "s/(.*)\/build\/packages(.*)/\1/")

export LD_LIBRARY_PATH := $(LD_LIBRARY_PATH):$(INSTALL_ROOT)/usr/lib

DEB_UPSTREAM_VERSION=$(shell dpkg-parsechangelog | sed -rne 's,^Version: ([0-9]:)*([^-]+).*,\2,p')

package-dkms=contrail-vrouter-dkms

VER := $(shell awk -F"=" '$$1 == "DISTRIB_CODENAME" {print $$NF}' /etc/lsb-release)
ifeq ($(findstring xenial,$(VER)),xenial)
	SUBSTVARS += -Vdbus:Depends="dbus, python-pydbus (>= 0.7.0)"
        DH_WITH=python2,systemd
else
        SUBSTVARS = -Vdist:Depends="supervisor"
        DH_WITH=python2
endif

ifneq (,$(filter site-mirror=%,$(DEB_BUILD_OPTIONS)))
	SITE_MIRROR=--site-mirror $(patsubst site-mirror=%,%,$(filter site-mirror=%,$(DEB_BUILD_OPTIONS)))
else
	SITE_MIRROR=""
endif

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	JOBS = -j$(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
else
	JOBS =
endif

TARGETS=control-node:node_mgr \
        opserver:node_mgr     \
        vrouter:node_mgr      \
        database:node_mgr     \
        src:nodemgr

%:
	dh $@ --with $(DH_WITH) --parallel

get-orig-source:
	(cd ${SB_TOP}/third_party/ && ./fetch_packages.py $(SITE_MIRROR))
	tar zcf contrail_${DEB_UPSTREAM_VERSION}.orig.tar.gz \
		controller vrouter third_party tools/build tools/generateds \
		openstack/nova_contrail_vif openstack/nova_extensions \
		tools/sandesh src SConstruct

override_dh_compress:
	dh_compress -X.json

#override_dh_auto_build:
#	(cd ${SB_TOP}; scons $(JOBS) --opt=production --root=${INSTALL_ROOT})

override_dh_auto_install:
	cd debian/manpages; ronn -r *.ronn
	(cd ${SB_TOP}; scons -j $(JOBS) --opt=production --root=${INSTALL_ROOT} --without-dpdk install)
	mkdir -p ${INSTALL_ROOT}/_debian/tmp
	(cd ${INSTALL_ROOT}/usr/src/vrouter && tar zcf ${INSTALL_ROOT}/_debian/tmp/contrail-vrouter-$(DEB_UPSTREAM_VERSION).tar.gz .)
	sed "s/__VERSION__/$(DEB_UPSTREAM_VERSION)/g" debian/dkms.conf.in > ${INSTALL_ROOT}/usr/src/vrouter/dkms.conf
	# Node manager - XXX: Add node_mgr targets to the default list of targets
	(cd ${SB_TOP}; scons $(JOBS) --opt=production --root=${INSTALL_ROOT} ${TARGETS})
	(cd ${SB_TOP}/build/production/nodemgr; python setup.py install --root=${INSTALL_ROOT} --install-layout=deb)
	(cd ${SB_TOP}/build/production/control-node; python setup.py install --root=${INSTALL_ROOT} --install-layout=deb)
	(cd ${SB_TOP}/build/production/vnsw/agent/uve; python setup.py install --root=${INSTALL_ROOT} --install-layout=deb)
	(cd ${SB_TOP}/build/production/opserver/node_mgr; python setup.py install --root=${INSTALL_ROOT} --install-layout=deb)
	(cd ${SB_TOP}/build/production/analytics/database; python setup.py install --root=${INSTALL_ROOT} --install-layout=deb)
	# Move schema specific files to opserver
	for mod_dir in ${INSTALL_ROOT}/usr/share/doc/contrail-docs/html/messages/*; do \
		if [ -d $$mod_dir ]; then \
			for python_dir in ${INSTALL_ROOT}/usr/lib/python*; do \
				mkdir -m 0755 -p $$python_dir/dist-packages/opserver/stats_schema/`basename $$mod_dir`; \
				for statsfile in ${INSTALL_ROOT}/usr/share/doc/contrail-docs/html/messages/`basename $$mod_dir`/*_stats_tables.json; do \
					install -p -m 644 -t $$python_dir/dist-packages/opserver/stats_schema/`basename $$mod_dir`/ $$statsfile; \
					rm -f $$statsfile; \
				done \
			done \
		fi \
	done
	# contrail-docs
	# Index files
	python ${SB_TOP}/tools/packages/utils/generate_doc_index.py ${INSTALL_ROOT}/usr/share/doc/contrail-docs/html/messages
	# contrail-cli
	mkdir -p ${INSTALL_ROOT}/etc/bash_completion.d
	python ${SB_TOP}/tools/packages/utils/generate_cli_commands.py ${SB_TOP}/build/production/utils/contrail-cli ${INSTALL_ROOT}
	(cd ${SB_TOP}/build/production/utils/contrail-cli/contrail_cli; python setup.py install --root=${INSTALL_ROOT} --install-layout=deb)
	(cd ${SB_TOP}/build/production/utils/contrail-cli/contrail_analytics_cli; python setup.py install --root=${INSTALL_ROOT} --install-layout=deb)
	(cd ${SB_TOP}/build/production/utils/contrail-cli/contrail_config_cli; python setup.py install --root=${INSTALL_ROOT} --install-layout=deb)
	(cd ${SB_TOP}/build/production/utils/contrail-cli/contrail_control_cli; python setup.py install --root=${INSTALL_ROOT} --install-layout=deb)
	(cd ${SB_TOP}/build/production/utils/contrail-cli/contrail_vrouter_cli; python setup.py install --root=${INSTALL_ROOT} --install-layout=deb)

override_dh_auto_clean:
	dh_auto_clean
	rm -rf debian/manpages/*.1 build/ config.log .scon* vrouter/dp-core/vr_buildinfo.c || /bin/true
	(cd vrouter/ && make clean)
	find . -name "*.pyc" -delete

override_dh_install:
	@echo "usr/src/vrouter/* usr/src/vrouter-$(DEB_UPSTREAM_VERSION)" > debian/$(package-dkms).install
	dh_install

override_dh_installinit:
	dh_installinit
	dh_installinit --name=supervisor-analytics
	dh_installinit --name=supervisor-control
	dh_installinit --name=supervisor-config
	dh_installinit --name=supervisor-vrouter --no-restart-on-upgrade

override_dh_strip:
	dh_strip -pcontrail-analytics --dbg-package=contrail-analytics-dbg
	dh_strip -pcontrail-control --dbg-package=contrail-control-dbg
	dh_strip -pcontrail-vrouter-agent --dbg-package=contrail-vrouter-agent-dbg

override_dh_gencontrol:
	dh_gencontrol -- $(SUBSTVARS)
